# Default values for paperlessngx.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/paperless-ngx/paperless-ngx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: null

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
#  data:
#    size: 10Gi
#    class: ''
#  media:
#    size: 10Gi
#    class: ''
#  import:
#    size: 10Gi
#    class: ''
#  export:
#    size: 10Gi
#    class: ''
podAnnotations: {}

podSecurityContext:
   fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

redis:
  enabled: true
  architecture: standalone
  auth:
    password: paperless
  master:
    persistence:
      enabled: false
    resources:
      limits:
        cpu: 100m
        memory: 250Mi
      requests:
        cpu: 100m
        memory: 250Mi
  replica:
    persistence:
      enabled: false

postgresql:
  enabled: true
  auth:
    database: paperless
    password: paperless
    postgresPassword: paperless
    username: paperless
  primary:
    persistence:
      enabled: true
      size: 40Gi
    resources:
      limits:
        cpu: 100m
        memory: 250Mi
      requests:
        cpu: 100m
        memory: 250Mi

storage:
  size: 10Gi
restore:
  enabled: false
  from: {}
backup:
  enabled: false
  password: ""
  accesskeyid: ""
  secretAccessKey: ""
  repository: ""
paperless:
  adminPassword: ""
  adminUser: ""
email:
  host: ""
  port: ""
  user: ""
  password: ""